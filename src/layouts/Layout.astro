---
interface Props {
  title: string;
  description: string;
  ogImage?: URL;
}

const { title, description } = Astro.props;

let ogImage = Astro.props.ogImage;

const completeTitle = `${title}${title ? " • " : ""}Temple Aviv Judea`;
if (!ogImage) {
  ogImage = new URL("/v1/generate/og/default.png", Astro.url);
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{completeTitle}</title>
    <style is:global>
      @import "open-props/style";
      @import "open-props/normalize";

      @font-face {
        font-family: "Geist Variable";
        src: url("/fonts/GeistVariableVF.woff2") format("woff2");
        font-weight: 100 900;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: "Geist Mono Variable";
        src: url("/fonts/GeistMonoVariableVF.woff2") format("woff2");
        font-weight: 100 900;
        font-style: normal;
        font-display: swap;
      }

      :root {
        --font-sans: "Geist Variable", sans-serif;
        --font-mono: "MonoLisa", "Geist Mono Variable", monospace;
      }

      :is(h1, h2, h3) + *,
      :is(*) ~ :is(h1, h2, h3) {
        margin-block-start: var(--size-5);
      }

      body {
        display: flex;
        flex-direction: column;
        gap: var(--size-8);
      }

      main {
        margin: 0 auto;
        padding: var(--size-fluid-3);
        max-width: 50rem;
        width: 100%;
      }

      footer {
        display: flex;
        flex-direction: column;
        margin: auto auto 0 auto;
        text-align: center;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: var(--size-3);
        padding-block: var(--size-5)
          calc(var(--size-5) + env(safe-area-inset-bottom));
        padding-inline: var(--size-5);

        div {
          display: flex;
          gap: var(--size-2);
        }

        div:last-child {
          flex-direction: column;
          text-align: center;
          justify-content: center;
          align-items: center;
        }
      }

      header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: var(--size-5);

        div {
          display: flex;
          align-items: center;

          svg {
            width: var(--size-7);
            height: fit-content;
            fill: var(--text-1);
          }
        }
      }

      a {
        display: inline-flex;
      }

      .button {
        align-items: center;
        justify-content: center;
        border-radius: var(--radius-2);
        padding-block: var(--size-2);
        padding-inline: var(--size-3);
        font-weight: 500;
        font-size: var(--size-3);
        background-color: var(--surface-2);
        color: var(--text-1);
      }

      .button.primary {
        background-color: var(--text-1);
        color: var(--surface-2);
      }
    </style>
  </head>
  <body>
    <slot />
    <footer>
      <a href="https://www.facebook.com/templeavivjudea/" class="button"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-facebook"
          ><path
            d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
          ></path></svg
        >
        <span set:text="Follow us on Facebook" />
      </a>
      <small>
        <span set:text="©" />
        <time
          datetime=`${new Date().getFullYear()}`
          set:text=`${new Date().getFullYear()}`
        />
        <span set:text="Temple Aviv Judea" />
      </small>
    </footer>
  </body>
</html>
